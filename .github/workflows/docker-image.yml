name: Publish Docker Image (GHCR & Docker Hub)

on:
  push:
    tags:
      - 'v*'

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Extract version from tag
        id: version
        run: |
          # 提取标签中的版本号，去掉 v 前缀
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: 📝 Generate changelog
        id: changelog
        run: |
          echo "Generating changelog..."

          echo "All tags:"
          git tag -l --sort=-version:refname

          if [[ "${{ steps.version.outputs.version }}" == *"-"* ]]; then
            # 当前为预发布版本，取最近的一个版本
            PREVIOUS_TAG=$(git tag -l --sort=-version:refname | sed -n '2p')
          else
            # 当前不为预发布版本，取最近的正式版 tag
            PREVIOUS_TAG=$(git tag -l --sort=-version:refname | grep -v '-' | sed -n '2p')
          fi

          echo "Previous tag: $PREVIOUS_TAG"

          if [ -n "$PREVIOUS_TAG" ]; then
            echo "Generating changelog from $PREVIOUS_TAG to current"
            changelog=$(npx @uniiem/changelogen@latest --from=$PREVIOUS_TAG --no-output --noMerges)
          else
            echo "No previous tag found, generating full changelog"
            changelog=$(npx @uniiem/changelogen@latest --no-output --noMerges)
          fi

          changelog=$(echo "$changelog" | sed 's/^\[log\][[:space:]]*//')

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📝 Create Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          discussion_category_name: announcements

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
            ${{ env.DOCKERHUB_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=nightly
            type=raw,value=latest,enable=${{ !contains(steps.version.outputs.version, '-') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate summary
        run: |
          echo "## 🚀 Docker Image Built and Pushed Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Images:**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### GitHub Container Registry" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}:${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.version.outputs.version }}" != *"-"* ]]; then
            echo "- \`${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.DOCKERHUB_IMAGE_NAME }}:${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.version.outputs.version }}" != *"-"* ]]; then
            echo "- \`${{ env.DOCKERHUB_IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
