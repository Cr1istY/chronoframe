{
  "eslint.useFlatConfig": true,
  "files.associations": {
    "*.css": "tailwindcss"
  },
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "tailwindCSS.classAttributes": [
    "class",
    "ui"
  ],
  "tailwindCSS.experimental.classRegex": [
    [
      "ui:\\s*{([^)]*)\\s*}",
      "(?:'|\"|`)([^']*)(?:'|\"|`)"
    ]
  ],
  "i18n-ally.localesPaths": [
    "i18n",
    "i18n/locales"
  ],
  "i18n-ally.sourceLanguage": "en",
  "i18n-ally.keystyle": "nested",
  "i18n-ally.extract.autoDetect": true,
  "i18n-ally.extract.ignoredByFiles": {
    "app/components/photo/InfoPanel.vue": [
      "${props.currentPhoto.width} × ${props.currentPhoto.height}"
    ],
    "app/components/map/ClusterPin.vue": [
      "\n                  representativePhoto.title || `聚类 ${representativePhoto.id}`\n                "
    ],
    "nuxt.config.ts": [
      "简体中文"
    ],
    "app/components/map/SinglePhotoPin.vue": [
      "marker.title || `照片 ${marker.id}`"
    ]
  },
  "i18n-ally.extract.ignored": [
    "(max-width: 768px)",
    "photo.title || `照片 ${photo.id}`",
    "\n                          +{{ clusteredPhotos.length - clusterCount }}\n                        ",
    "\n                        {{\n                          clusteredPhotos\n                            .map((p) => p.city)\n                            .filter((v, i, a) => v ",
    "& a.indexOf(v) === i)\n                            .join(', ')\n                        }}\n                      ",
    "&",
    "L LT",
    "MMM YYYY",
    "YYYY MMM",
    "Author;s avatar",
    "Author's avatar",
    "Mems rest within the lens.",
    "UCheckbox"
  ]
}